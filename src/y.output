Terminals unused in grammar

    ARROW
    QUOTE
    RESERVED


Rules useless in parser due to conflicts

   46 StatementOrError: error SEMICOLON


State 128 conflicts: 14 reduce/reduce


Grammar

    0 $accept: Main $end

    1 Main: Program

    2 Program: CLASS ID LBRACE Program2 RBRACE

    3 Program2: MethodDecl Program2
    4         | FieldDecl Program2
    5         | SEMICOLON Program2
    6         | ε

    7 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    8 FieldDecl: PUBLIC STATIC Type ID FieldDecl2 SEMICOLON
    9          | error SEMICOLON

   10 FieldDecl2: COMMA ID FieldDecl2
   11           | ε

   12 Type: BOOL
   13     | INT
   14     | DOUBLE

   15 MethodHeader: Type ID LPAR FormalParams RPAR
   16             | Type ID LPAR RPAR
   17             | VOID ID LPAR FormalParams RPAR
   18             | VOID ID LPAR RPAR

   19 FormalParams: Type ID FormalParams2
   20             | STRING LSQ RSQ ID

   21 FormalParams2: COMMA Type ID FormalParams2
   22              | ε

   23 MethodBody: LBRACE MethodBody2 RBRACE

   24 MethodBody2: Statement MethodBody2
   25            | VarDecl MethodBody2
   26            | ε

   27 VarDecl: Type ID VarDecl2 SEMICOLON

   28 VarDecl2: COMMA ID VarDecl2
   29         | ε

   30 Statement: LBRACE StatementList RBRACE
   31          | IF LPAR Expr RPAR StatementOrError ELSE StatementOrError
   32          | IF LPAR Expr RPAR StatementOrError
   33          | WHILE LPAR Expr RPAR StatementOrError
   34          | RETURN Expr SEMICOLON
   35          | RETURN SEMICOLON
   36          | MethodInvocation SEMICOLON
   37          | Assignment SEMICOLON
   38          | ParseArgs SEMICOLON
   39          | error SEMICOLON
   40          | SEMICOLON
   41          | PRINT LPAR Expr RPAR SEMICOLON
   42          | PRINT LPAR STRLIT RPAR SEMICOLON

   43 StatementList: StatementOrError StatementList
   44              | StatementOrError

   45 StatementOrError: Statement
   46                 | error SEMICOLON

   47 MethodInvocation: ID LPAR RPAR
   48                 | ID LPAR error RPAR
   49                 | ID LPAR Expr MethodInvocation2 RPAR

   50 MethodInvocation2: COMMA Expr MethodInvocation2
   51                  | error

   52 Assignment: ID ASSIGN Expr

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   54          | PARSEINT LPAR error RPAR

   55 Expr: Assignment
   56     | Expr1

   57 Expr1: Expr1 PLUS Expr1
   58      | Expr1 MINUS Expr1
   59      | Expr1 STAR Expr1
   60      | Expr1 DIV Expr1
   61      | Expr1 MOD Expr1
   62      | Expr1 AND Expr1
   63      | Expr1 OR Expr1
   64      | Expr1 XOR Expr1
   65      | Expr1 LSHIFT Expr1
   66      | Expr1 RSHIFT Expr1
   67      | Expr1 EQ Expr1
   68      | Expr1 GE Expr1
   69      | Expr1 GT Expr1
   70      | Expr1 LE Expr1
   71      | Expr1 LT Expr1
   72      | Expr1 NE Expr1
   73      | MINUS Expr1
   74      | NOT Expr1
   75      | PLUS Expr1
   76      | LPAR Expr1 RPAR
   77      | LPAR error RPAR
   78      | MethodInvocation
   79      | ParseArgs
   80      | ID DOTLENGTH
   81      | ID
   82      | INTLIT
   83      | REALLIT
   84      | BOOLLIT


Terminals, with rules where they appear

    $end (0) 0
    error (256) 9 39 46 48 51 54 77
    INTLIT <token> (258) 82
    STRLIT <token> (259) 42
    REALLIT <token> (260) 83
    ID <token> (261) 2 8 10 15 16 17 18 19 20 21 27 28 47 48 49 52 53 80 81
    IF <token> (262) 31 32
    ELSE <token> (263) 31
    WHILE <token> (264) 33
    RETURN <token> (265) 34 35
    BOOL <token> (266) 12
    CLASS <token> (267) 2
    DOUBLE <token> (268) 14
    INT <token> (269) 13
    PUBLIC <token> (270) 7 8
    STATIC <token> (271) 7 8
    STRING <token> (272) 20
    VOID <token> (273) 17 18
    EQ <token> (274) 67
    GE <token> (275) 68
    GT <token> (276) 69
    LT <token> (277) 71
    LE <token> (278) 70
    NE <token> (279) 72
    DOTLENGTH <token> (280) 80
    PRINT <token> (281) 41 42
    PARSEINT <token> (282) 53 54
    BOOLLIT <token> (283) 84
    AND <token> (284) 62
    NOT <token> (285) 74
    OR <token> (286) 63
    XOR <token> (287) 64
    MOD <token> (288) 61
    DIV <token> (289) 60
    STAR <token> (290) 59
    MINUS <token> (291) 58 73
    PLUS <token> (292) 57 75
    ASSIGN <token> (293) 52
    COMMA <token> (294) 10 21 28 50
    LBRACE <token> (295) 2 23 30
    LPAR <token> (296) 15 16 17 18 31 32 33 41 42 47 48 49 53 54 76 77
    LSQ <token> (297) 20 53
    RBRACE <token> (298) 2 23 30
    RPAR <token> (299) 15 16 17 18 31 32 33 41 42 47 48 49 53 54 76 77
    RSQ <token> (300) 20 53
    SEMICOLON <token> (301) 5 8 9 27 34 35 36 37 38 39 40 41 42 46
    LSHIFT <token> (302) 65
    RSHIFT <token> (303) 66
    ARROW <token> (304)
    QUOTE <token> (305)
    RESERVED <token> (306)
    NO_ELSE (307)


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    Main <node> (54)
        on left: 1
        on right: 0
    Program <node> (55)
        on left: 2
        on right: 1
    Program2 <node> (56)
        on left: 3 4 5 6
        on right: 2 3 4 5
    MethodDecl <node> (57)
        on left: 7
        on right: 3
    FieldDecl <node> (58)
        on left: 8 9
        on right: 4
    FieldDecl2 <node> (59)
        on left: 10 11
        on right: 8 10
    Type <node> (60)
        on left: 12 13 14
        on right: 8 15 16 19 21 27
    MethodHeader <node> (61)
        on left: 15 16 17 18
        on right: 7
    FormalParams <node> (62)
        on left: 19 20
        on right: 15 17
    FormalParams2 <node> (63)
        on left: 21 22
        on right: 19 21
    MethodBody <node> (64)
        on left: 23
        on right: 7
    MethodBody2 <node> (65)
        on left: 24 25 26
        on right: 23 24 25
    VarDecl <node> (66)
        on left: 27
        on right: 25
    VarDecl2 <node> (67)
        on left: 28 29
        on right: 27 28
    Statement <node> (68)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 24 45
    StatementList <node> (69)
        on left: 43 44
        on right: 30 43
    StatementOrError <node> (70)
        on left: 45 46
        on right: 31 32 33 43 44
    MethodInvocation <node> (71)
        on left: 47 48 49
        on right: 36 78
    MethodInvocation2 <node> (72)
        on left: 50 51
        on right: 49 50
    Assignment <node> (73)
        on left: 52
        on right: 37 55
    ParseArgs <node> (74)
        on left: 53 54
        on right: 38 79
    Expr <node> (75)
        on left: 55 56
        on right: 31 32 33 34 41 49 50 52 53
    Expr1 <node> (76)
        on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76


State 0

    0 $accept: • Main $end

    CLASS  shift, and go to state 1

    Main     go to state 2
    Program  go to state 3


State 1

    2 Program: CLASS • ID LBRACE Program2 RBRACE

    ID  shift, and go to state 4


State 2

    0 $accept: Main • $end

    $end  shift, and go to state 5


State 3

    1 Main: Program •

    $default  reduce using rule 1 (Main)


State 4

    2 Program: CLASS ID • LBRACE Program2 RBRACE

    LBRACE  shift, and go to state 6


State 5

    0 $accept: Main $end •

    $default  accept


State 6

    2 Program: CLASS ID LBRACE • Program2 RBRACE

    error      shift, and go to state 7
    PUBLIC     shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    RBRACE  reduce using rule 6 (Program2)

    Program2    go to state 10
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 7

    9 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 13


State 8

    7 MethodDecl: PUBLIC • STATIC MethodHeader MethodBody
    8 FieldDecl: PUBLIC • STATIC Type ID FieldDecl2 SEMICOLON

    STATIC  shift, and go to state 14


State 9

    5 Program2: SEMICOLON • Program2

    error      shift, and go to state 7
    PUBLIC     shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    RBRACE  reduce using rule 6 (Program2)

    Program2    go to state 15
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 10

    2 Program: CLASS ID LBRACE Program2 • RBRACE

    RBRACE  shift, and go to state 16


State 11

    3 Program2: MethodDecl • Program2

    error      shift, and go to state 7
    PUBLIC     shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    RBRACE  reduce using rule 6 (Program2)

    Program2    go to state 17
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 12

    4 Program2: FieldDecl • Program2

    error      shift, and go to state 7
    PUBLIC     shift, and go to state 8
    SEMICOLON  shift, and go to state 9

    RBRACE  reduce using rule 6 (Program2)

    Program2    go to state 18
    MethodDecl  go to state 11
    FieldDecl   go to state 12


State 13

    9 FieldDecl: error SEMICOLON •

    $default  reduce using rule 9 (FieldDecl)


State 14

    7 MethodDecl: PUBLIC STATIC • MethodHeader MethodBody
    8 FieldDecl: PUBLIC STATIC • Type ID FieldDecl2 SEMICOLON

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    VOID    shift, and go to state 22

    Type          go to state 23
    MethodHeader  go to state 24


State 15

    5 Program2: SEMICOLON Program2 •

    $default  reduce using rule 5 (Program2)


State 16

    2 Program: CLASS ID LBRACE Program2 RBRACE •

    $default  reduce using rule 2 (Program)


State 17

    3 Program2: MethodDecl Program2 •

    $default  reduce using rule 3 (Program2)


State 18

    4 Program2: FieldDecl Program2 •

    $default  reduce using rule 4 (Program2)


State 19

   12 Type: BOOL •

    $default  reduce using rule 12 (Type)


State 20

   14 Type: DOUBLE •

    $default  reduce using rule 14 (Type)


State 21

   13 Type: INT •

    $default  reduce using rule 13 (Type)


State 22

   17 MethodHeader: VOID • ID LPAR FormalParams RPAR
   18             | VOID • ID LPAR RPAR

    ID  shift, and go to state 25


State 23

    8 FieldDecl: PUBLIC STATIC Type • ID FieldDecl2 SEMICOLON
   15 MethodHeader: Type • ID LPAR FormalParams RPAR
   16             | Type • ID LPAR RPAR

    ID  shift, and go to state 26


State 24

    7 MethodDecl: PUBLIC STATIC MethodHeader • MethodBody

    LBRACE  shift, and go to state 27

    MethodBody  go to state 28


State 25

   17 MethodHeader: VOID ID • LPAR FormalParams RPAR
   18             | VOID ID • LPAR RPAR

    LPAR  shift, and go to state 29


State 26

    8 FieldDecl: PUBLIC STATIC Type ID • FieldDecl2 SEMICOLON
   15 MethodHeader: Type ID • LPAR FormalParams RPAR
   16             | Type ID • LPAR RPAR

    COMMA  shift, and go to state 30
    LPAR   shift, and go to state 31

    $default  reduce using rule 11 (FieldDecl2)

    FieldDecl2  go to state 32


State 27

   23 MethodBody: LBRACE • MethodBody2 RBRACE

    error      shift, and go to state 33
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    BOOL       shift, and go to state 19
    DOUBLE     shift, and go to state 20
    INT        shift, and go to state 21
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    RBRACE  reduce using rule 26 (MethodBody2)

    Type              go to state 42
    MethodBody2       go to state 43
    VarDecl           go to state 44
    Statement         go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 28

    7 MethodDecl: PUBLIC STATIC MethodHeader MethodBody •

    $default  reduce using rule 7 (MethodDecl)


State 29

   17 MethodHeader: VOID ID LPAR • FormalParams RPAR
   18             | VOID ID LPAR • RPAR

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    STRING  shift, and go to state 49
    RPAR    shift, and go to state 50

    Type          go to state 51
    FormalParams  go to state 52


State 30

   10 FieldDecl2: COMMA • ID FieldDecl2

    ID  shift, and go to state 53


State 31

   15 MethodHeader: Type ID LPAR • FormalParams RPAR
   16             | Type ID LPAR • RPAR

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    STRING  shift, and go to state 49
    RPAR    shift, and go to state 54

    Type          go to state 51
    FormalParams  go to state 55


State 32

    8 FieldDecl: PUBLIC STATIC Type ID FieldDecl2 • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 33

   39 Statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 34

   47 MethodInvocation: ID • LPAR RPAR
   48                 | ID • LPAR error RPAR
   49                 | ID • LPAR Expr MethodInvocation2 RPAR
   52 Assignment: ID • ASSIGN Expr

    ASSIGN  shift, and go to state 58
    LPAR    shift, and go to state 59


State 35

   31 Statement: IF • LPAR Expr RPAR StatementOrError ELSE StatementOrError
   32          | IF • LPAR Expr RPAR StatementOrError

    LPAR  shift, and go to state 60


State 36

   33 Statement: WHILE • LPAR Expr RPAR StatementOrError

    LPAR  shift, and go to state 61


State 37

   34 Statement: RETURN • Expr SEMICOLON
   35          | RETURN • SEMICOLON

    INTLIT     shift, and go to state 62
    REALLIT    shift, and go to state 63
    ID         shift, and go to state 64
    PARSEINT   shift, and go to state 39
    BOOLLIT    shift, and go to state 65
    NOT        shift, and go to state 66
    MINUS      shift, and go to state 67
    PLUS       shift, and go to state 68
    LPAR       shift, and go to state 69
    SEMICOLON  shift, and go to state 70

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 74
    Expr1             go to state 75


State 38

   41 Statement: PRINT • LPAR Expr RPAR SEMICOLON
   42          | PRINT • LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 76


State 39

   53 ParseArgs: PARSEINT • LPAR ID LSQ Expr RSQ RPAR
   54          | PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 77


State 40

   30 Statement: LBRACE • StatementList RBRACE

    error      shift, and go to state 78
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    Statement         go to state 79
    StatementList     go to state 80
    StatementOrError  go to state 81
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 41

   40 Statement: SEMICOLON •

    $default  reduce using rule 40 (Statement)


State 42

   27 VarDecl: Type • ID VarDecl2 SEMICOLON

    ID  shift, and go to state 82


State 43

   23 MethodBody: LBRACE MethodBody2 • RBRACE

    RBRACE  shift, and go to state 83


State 44

   25 MethodBody2: VarDecl • MethodBody2

    error      shift, and go to state 33
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    BOOL       shift, and go to state 19
    DOUBLE     shift, and go to state 20
    INT        shift, and go to state 21
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    RBRACE  reduce using rule 26 (MethodBody2)

    Type              go to state 42
    MethodBody2       go to state 84
    VarDecl           go to state 44
    Statement         go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 45

   24 MethodBody2: Statement • MethodBody2

    error      shift, and go to state 33
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    BOOL       shift, and go to state 19
    DOUBLE     shift, and go to state 20
    INT        shift, and go to state 21
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    RBRACE  reduce using rule 26 (MethodBody2)

    Type              go to state 42
    MethodBody2       go to state 85
    VarDecl           go to state 44
    Statement         go to state 45
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 46

   36 Statement: MethodInvocation • SEMICOLON

    SEMICOLON  shift, and go to state 86


State 47

   37 Statement: Assignment • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 48

   38 Statement: ParseArgs • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 49

   20 FormalParams: STRING • LSQ RSQ ID

    LSQ  shift, and go to state 89


State 50

   18 MethodHeader: VOID ID LPAR RPAR •

    $default  reduce using rule 18 (MethodHeader)


State 51

   19 FormalParams: Type • ID FormalParams2

    ID  shift, and go to state 90


State 52

   17 MethodHeader: VOID ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 91


State 53

   10 FieldDecl2: COMMA ID • FieldDecl2

    COMMA  shift, and go to state 30

    $default  reduce using rule 11 (FieldDecl2)

    FieldDecl2  go to state 92


State 54

   16 MethodHeader: Type ID LPAR RPAR •

    $default  reduce using rule 16 (MethodHeader)


State 55

   15 MethodHeader: Type ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 93


State 56

    8 FieldDecl: PUBLIC STATIC Type ID FieldDecl2 SEMICOLON •

    $default  reduce using rule 8 (FieldDecl)


State 57

   39 Statement: error SEMICOLON •

    $default  reduce using rule 39 (Statement)


State 58

   52 Assignment: ID ASSIGN • Expr

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 64
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 94
    Expr1             go to state 75


State 59

   47 MethodInvocation: ID LPAR • RPAR
   48                 | ID LPAR • error RPAR
   49                 | ID LPAR • Expr MethodInvocation2 RPAR

    error     shift, and go to state 95
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 64
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69
    RPAR      shift, and go to state 96

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 97
    Expr1             go to state 75


State 60

   31 Statement: IF LPAR • Expr RPAR StatementOrError ELSE StatementOrError
   32          | IF LPAR • Expr RPAR StatementOrError

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 64
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 98
    Expr1             go to state 75


State 61

   33 Statement: WHILE LPAR • Expr RPAR StatementOrError

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 64
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 99
    Expr1             go to state 75


State 62

   82 Expr1: INTLIT •

    $default  reduce using rule 82 (Expr1)


State 63

   83 Expr1: REALLIT •

    $default  reduce using rule 83 (Expr1)


State 64

   47 MethodInvocation: ID • LPAR RPAR
   48                 | ID • LPAR error RPAR
   49                 | ID • LPAR Expr MethodInvocation2 RPAR
   52 Assignment: ID • ASSIGN Expr
   80 Expr1: ID • DOTLENGTH
   81      | ID •

    DOTLENGTH  shift, and go to state 100
    ASSIGN     shift, and go to state 58
    LPAR       shift, and go to state 59

    $default  reduce using rule 81 (Expr1)


State 65

   84 Expr1: BOOLLIT •

    $default  reduce using rule 84 (Expr1)


State 66

   74 Expr1: NOT • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 102


State 67

   73 Expr1: MINUS • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 103


State 68

   75 Expr1: PLUS • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 104


State 69

   76 Expr1: LPAR • Expr1 RPAR
   77      | LPAR • error RPAR

    error     shift, and go to state 105
    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 106


State 70

   35 Statement: RETURN SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 71

   78 Expr1: MethodInvocation •

    $default  reduce using rule 78 (Expr1)


State 72

   55 Expr: Assignment •

    $default  reduce using rule 55 (Expr)


State 73

   79 Expr1: ParseArgs •

    $default  reduce using rule 79 (Expr1)


State 74

   34 Statement: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 107


State 75

   56 Expr: Expr1 •
   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    EQ      shift, and go to state 108
    GE      shift, and go to state 109
    GT      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    NE      shift, and go to state 113
    AND     shift, and go to state 114
    OR      shift, and go to state 115
    XOR     shift, and go to state 116
    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 56 (Expr)


State 76

   41 Statement: PRINT LPAR • Expr RPAR SEMICOLON
   42          | PRINT LPAR • STRLIT RPAR SEMICOLON

    INTLIT    shift, and go to state 62
    STRLIT    shift, and go to state 124
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 64
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 125
    Expr1             go to state 75


State 77

   53 ParseArgs: PARSEINT LPAR • ID LSQ Expr RSQ RPAR
   54          | PARSEINT LPAR • error RPAR

    error  shift, and go to state 126
    ID     shift, and go to state 127


State 78

   39 Statement: error • SEMICOLON
   46 StatementOrError: error • SEMICOLON

    SEMICOLON  shift, and go to state 128


State 79

   45 StatementOrError: Statement •

    $default  reduce using rule 45 (StatementOrError)


State 80

   30 Statement: LBRACE StatementList • RBRACE

    RBRACE  shift, and go to state 129


State 81

   43 StatementList: StatementOrError • StatementList
   44              | StatementOrError •

    error      shift, and go to state 78
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    RBRACE  reduce using rule 44 (StatementList)

    Statement         go to state 79
    StatementList     go to state 130
    StatementOrError  go to state 81
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 82

   27 VarDecl: Type ID • VarDecl2 SEMICOLON

    COMMA  shift, and go to state 131

    $default  reduce using rule 29 (VarDecl2)

    VarDecl2  go to state 132


State 83

   23 MethodBody: LBRACE MethodBody2 RBRACE •

    $default  reduce using rule 23 (MethodBody)


State 84

   25 MethodBody2: VarDecl MethodBody2 •

    $default  reduce using rule 25 (MethodBody2)


State 85

   24 MethodBody2: Statement MethodBody2 •

    $default  reduce using rule 24 (MethodBody2)


State 86

   36 Statement: MethodInvocation SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 87

   37 Statement: Assignment SEMICOLON •

    $default  reduce using rule 37 (Statement)


State 88

   38 Statement: ParseArgs SEMICOLON •

    $default  reduce using rule 38 (Statement)


State 89

   20 FormalParams: STRING LSQ • RSQ ID

    RSQ  shift, and go to state 133


State 90

   19 FormalParams: Type ID • FormalParams2

    COMMA  shift, and go to state 134

    $default  reduce using rule 22 (FormalParams2)

    FormalParams2  go to state 135


State 91

   17 MethodHeader: VOID ID LPAR FormalParams RPAR •

    $default  reduce using rule 17 (MethodHeader)


State 92

   10 FieldDecl2: COMMA ID FieldDecl2 •

    $default  reduce using rule 10 (FieldDecl2)


State 93

   15 MethodHeader: Type ID LPAR FormalParams RPAR •

    $default  reduce using rule 15 (MethodHeader)


State 94

   52 Assignment: ID ASSIGN Expr •

    $default  reduce using rule 52 (Assignment)


State 95

   48 MethodInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 136


State 96

   47 MethodInvocation: ID LPAR RPAR •

    $default  reduce using rule 47 (MethodInvocation)


State 97

   49 MethodInvocation: ID LPAR Expr • MethodInvocation2 RPAR

    error  shift, and go to state 137
    COMMA  shift, and go to state 138

    MethodInvocation2  go to state 139


State 98

   31 Statement: IF LPAR Expr • RPAR StatementOrError ELSE StatementOrError
   32          | IF LPAR Expr • RPAR StatementOrError

    RPAR  shift, and go to state 140


State 99

   33 Statement: WHILE LPAR Expr • RPAR StatementOrError

    RPAR  shift, and go to state 141


State 100

   80 Expr1: ID DOTLENGTH •

    $default  reduce using rule 80 (Expr1)


State 101

   47 MethodInvocation: ID • LPAR RPAR
   48                 | ID • LPAR error RPAR
   49                 | ID • LPAR Expr MethodInvocation2 RPAR
   80 Expr1: ID • DOTLENGTH
   81      | ID •

    DOTLENGTH  shift, and go to state 100
    LPAR       shift, and go to state 59

    $default  reduce using rule 81 (Expr1)


State 102

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1
   74      | NOT Expr1 •

    $default  reduce using rule 74 (Expr1)


State 103

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1
   73      | MINUS Expr1 •

    MOD   shift, and go to state 117
    DIV   shift, and go to state 118
    STAR  shift, and go to state 119

    $default  reduce using rule 73 (Expr1)


State 104

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1
   75      | PLUS Expr1 •

    MOD   shift, and go to state 117
    DIV   shift, and go to state 118
    STAR  shift, and go to state 119

    $default  reduce using rule 75 (Expr1)


State 105

   77 Expr1: LPAR error • RPAR

    RPAR  shift, and go to state 142


State 106

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1
   76      | LPAR Expr1 • RPAR

    EQ      shift, and go to state 108
    GE      shift, and go to state 109
    GT      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    NE      shift, and go to state 113
    AND     shift, and go to state 114
    OR      shift, and go to state 115
    XOR     shift, and go to state 116
    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    RPAR    shift, and go to state 143
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123


State 107

   34 Statement: RETURN Expr SEMICOLON •

    $default  reduce using rule 34 (Statement)


State 108

   67 Expr1: Expr1 EQ • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 144


State 109

   68 Expr1: Expr1 GE • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 145


State 110

   69 Expr1: Expr1 GT • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 146


State 111

   71 Expr1: Expr1 LT • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 147


State 112

   70 Expr1: Expr1 LE • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 148


State 113

   72 Expr1: Expr1 NE • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 149


State 114

   62 Expr1: Expr1 AND • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 150


State 115

   63 Expr1: Expr1 OR • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 151


State 116

   64 Expr1: Expr1 XOR • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 152


State 117

   61 Expr1: Expr1 MOD • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 153


State 118

   60 Expr1: Expr1 DIV • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 154


State 119

   59 Expr1: Expr1 STAR • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 155


State 120

   58 Expr1: Expr1 MINUS • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 156


State 121

   57 Expr1: Expr1 PLUS • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 157


State 122

   65 Expr1: Expr1 LSHIFT • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 158


State 123

   66 Expr1: Expr1 RSHIFT • Expr1

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 101
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    ParseArgs         go to state 73
    Expr1             go to state 159


State 124

   42 Statement: PRINT LPAR STRLIT • RPAR SEMICOLON

    RPAR  shift, and go to state 160


State 125

   41 Statement: PRINT LPAR Expr • RPAR SEMICOLON

    RPAR  shift, and go to state 161


State 126

   54 ParseArgs: PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 162


State 127

   53 ParseArgs: PARSEINT LPAR ID • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 163


State 128

   39 Statement: error SEMICOLON •
   46 StatementOrError: error SEMICOLON •

    error      reduce using rule 39 (Statement)
    error      [reduce using rule 46 (StatementOrError)]
    ID         reduce using rule 39 (Statement)
    ID         [reduce using rule 46 (StatementOrError)]
    IF         reduce using rule 39 (Statement)
    IF         [reduce using rule 46 (StatementOrError)]
    ELSE       reduce using rule 39 (Statement)
    ELSE       [reduce using rule 46 (StatementOrError)]
    WHILE      reduce using rule 39 (Statement)
    WHILE      [reduce using rule 46 (StatementOrError)]
    RETURN     reduce using rule 39 (Statement)
    RETURN     [reduce using rule 46 (StatementOrError)]
    BOOL       reduce using rule 39 (Statement)
    BOOL       [reduce using rule 46 (StatementOrError)]
    DOUBLE     reduce using rule 39 (Statement)
    DOUBLE     [reduce using rule 46 (StatementOrError)]
    INT        reduce using rule 39 (Statement)
    INT        [reduce using rule 46 (StatementOrError)]
    PRINT      reduce using rule 39 (Statement)
    PRINT      [reduce using rule 46 (StatementOrError)]
    PARSEINT   reduce using rule 39 (Statement)
    PARSEINT   [reduce using rule 46 (StatementOrError)]
    LBRACE     reduce using rule 39 (Statement)
    LBRACE     [reduce using rule 46 (StatementOrError)]
    RBRACE     reduce using rule 39 (Statement)
    RBRACE     [reduce using rule 46 (StatementOrError)]
    SEMICOLON  reduce using rule 39 (Statement)
    SEMICOLON  [reduce using rule 46 (StatementOrError)]
    $default   reduce using rule 39 (Statement)


State 129

   30 Statement: LBRACE StatementList RBRACE •

    $default  reduce using rule 30 (Statement)


State 130

   43 StatementList: StatementOrError StatementList •

    $default  reduce using rule 43 (StatementList)


State 131

   28 VarDecl2: COMMA • ID VarDecl2

    ID  shift, and go to state 164


State 132

   27 VarDecl: Type ID VarDecl2 • SEMICOLON

    SEMICOLON  shift, and go to state 165


State 133

   20 FormalParams: STRING LSQ RSQ • ID

    ID  shift, and go to state 166


State 134

   21 FormalParams2: COMMA • Type ID FormalParams2

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21

    Type  go to state 167


State 135

   19 FormalParams: Type ID FormalParams2 •

    $default  reduce using rule 19 (FormalParams)


State 136

   48 MethodInvocation: ID LPAR error RPAR •

    $default  reduce using rule 48 (MethodInvocation)


State 137

   51 MethodInvocation2: error •

    $default  reduce using rule 51 (MethodInvocation2)


State 138

   50 MethodInvocation2: COMMA • Expr MethodInvocation2

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 64
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 168
    Expr1             go to state 75


State 139

   49 MethodInvocation: ID LPAR Expr MethodInvocation2 • RPAR

    RPAR  shift, and go to state 169


State 140

   31 Statement: IF LPAR Expr RPAR • StatementOrError ELSE StatementOrError
   32          | IF LPAR Expr RPAR • StatementOrError

    error      shift, and go to state 78
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    Statement         go to state 79
    StatementOrError  go to state 170
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 141

   33 Statement: WHILE LPAR Expr RPAR • StatementOrError

    error      shift, and go to state 78
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    Statement         go to state 79
    StatementOrError  go to state 171
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 142

   77 Expr1: LPAR error RPAR •

    $default  reduce using rule 77 (Expr1)


State 143

   76 Expr1: LPAR Expr1 RPAR •

    $default  reduce using rule 76 (Expr1)


State 144

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   67      | Expr1 EQ Expr1 •
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    GE      shift, and go to state 109
    GT      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 67 (Expr1)


State 145

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   68      | Expr1 GE Expr1 •
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 68 (Expr1)


State 146

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   69      | Expr1 GT Expr1 •
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 69 (Expr1)


State 147

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   71      | Expr1 LT Expr1 •
   72      | Expr1 • NE Expr1

    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 71 (Expr1)


State 148

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   70      | Expr1 LE Expr1 •
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 70 (Expr1)


State 149

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1
   72      | Expr1 NE Expr1 •

    GE      shift, and go to state 109
    GT      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 72 (Expr1)


State 150

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   62      | Expr1 AND Expr1 •
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    EQ      shift, and go to state 108
    GE      shift, and go to state 109
    GT      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    NE      shift, and go to state 113
    XOR     shift, and go to state 116
    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 62 (Expr1)


State 151

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   63      | Expr1 OR Expr1 •
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    EQ      shift, and go to state 108
    GE      shift, and go to state 109
    GT      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    NE      shift, and go to state 113
    AND     shift, and go to state 114
    XOR     shift, and go to state 116
    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 63 (Expr1)


State 152

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   64      | Expr1 XOR Expr1 •
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    EQ      shift, and go to state 108
    GE      shift, and go to state 109
    GT      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    NE      shift, and go to state 113
    MOD     shift, and go to state 117
    DIV     shift, and go to state 118
    STAR    shift, and go to state 119
    MINUS   shift, and go to state 120
    PLUS    shift, and go to state 121
    LSHIFT  shift, and go to state 122
    RSHIFT  shift, and go to state 123

    $default  reduce using rule 64 (Expr1)


State 153

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   61      | Expr1 MOD Expr1 •
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    $default  reduce using rule 61 (Expr1)


State 154

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   60      | Expr1 DIV Expr1 •
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    $default  reduce using rule 60 (Expr1)


State 155

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   59      | Expr1 STAR Expr1 •
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    $default  reduce using rule 59 (Expr1)


State 156

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   58      | Expr1 MINUS Expr1 •
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    MOD   shift, and go to state 117
    DIV   shift, and go to state 118
    STAR  shift, and go to state 119

    $default  reduce using rule 58 (Expr1)


State 157

   57 Expr1: Expr1 • PLUS Expr1
   57      | Expr1 PLUS Expr1 •
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    MOD   shift, and go to state 117
    DIV   shift, and go to state 118
    STAR  shift, and go to state 119

    $default  reduce using rule 57 (Expr1)


State 158

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   65      | Expr1 LSHIFT Expr1 •
   66      | Expr1 • RSHIFT Expr1
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    MOD    shift, and go to state 117
    DIV    shift, and go to state 118
    STAR   shift, and go to state 119
    MINUS  shift, and go to state 120
    PLUS   shift, and go to state 121

    $default  reduce using rule 65 (Expr1)


State 159

   57 Expr1: Expr1 • PLUS Expr1
   58      | Expr1 • MINUS Expr1
   59      | Expr1 • STAR Expr1
   60      | Expr1 • DIV Expr1
   61      | Expr1 • MOD Expr1
   62      | Expr1 • AND Expr1
   63      | Expr1 • OR Expr1
   64      | Expr1 • XOR Expr1
   65      | Expr1 • LSHIFT Expr1
   66      | Expr1 • RSHIFT Expr1
   66      | Expr1 RSHIFT Expr1 •
   67      | Expr1 • EQ Expr1
   68      | Expr1 • GE Expr1
   69      | Expr1 • GT Expr1
   70      | Expr1 • LE Expr1
   71      | Expr1 • LT Expr1
   72      | Expr1 • NE Expr1

    MOD    shift, and go to state 117
    DIV    shift, and go to state 118
    STAR   shift, and go to state 119
    MINUS  shift, and go to state 120
    PLUS   shift, and go to state 121

    $default  reduce using rule 66 (Expr1)


State 160

   42 Statement: PRINT LPAR STRLIT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 172


State 161

   41 Statement: PRINT LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 173


State 162

   54 ParseArgs: PARSEINT LPAR error RPAR •

    $default  reduce using rule 54 (ParseArgs)


State 163

   53 ParseArgs: PARSEINT LPAR ID LSQ • Expr RSQ RPAR

    INTLIT    shift, and go to state 62
    REALLIT   shift, and go to state 63
    ID        shift, and go to state 64
    PARSEINT  shift, and go to state 39
    BOOLLIT   shift, and go to state 65
    NOT       shift, and go to state 66
    MINUS     shift, and go to state 67
    PLUS      shift, and go to state 68
    LPAR      shift, and go to state 69

    MethodInvocation  go to state 71
    Assignment        go to state 72
    ParseArgs         go to state 73
    Expr              go to state 174
    Expr1             go to state 75


State 164

   28 VarDecl2: COMMA ID • VarDecl2

    COMMA  shift, and go to state 131

    $default  reduce using rule 29 (VarDecl2)

    VarDecl2  go to state 175


State 165

   27 VarDecl: Type ID VarDecl2 SEMICOLON •

    $default  reduce using rule 27 (VarDecl)


State 166

   20 FormalParams: STRING LSQ RSQ ID •

    $default  reduce using rule 20 (FormalParams)


State 167

   21 FormalParams2: COMMA Type • ID FormalParams2

    ID  shift, and go to state 176


State 168

   50 MethodInvocation2: COMMA Expr • MethodInvocation2

    error  shift, and go to state 137
    COMMA  shift, and go to state 138

    MethodInvocation2  go to state 177


State 169

   49 MethodInvocation: ID LPAR Expr MethodInvocation2 RPAR •

    $default  reduce using rule 49 (MethodInvocation)


State 170

   31 Statement: IF LPAR Expr RPAR StatementOrError • ELSE StatementOrError
   32          | IF LPAR Expr RPAR StatementOrError •

    ELSE  shift, and go to state 178

    $default  reduce using rule 32 (Statement)


State 171

   33 Statement: WHILE LPAR Expr RPAR StatementOrError •

    $default  reduce using rule 33 (Statement)


State 172

   42 Statement: PRINT LPAR STRLIT RPAR SEMICOLON •

    $default  reduce using rule 42 (Statement)


State 173

   41 Statement: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 41 (Statement)


State 174

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr • RSQ RPAR

    RSQ  shift, and go to state 179


State 175

   28 VarDecl2: COMMA ID VarDecl2 •

    $default  reduce using rule 28 (VarDecl2)


State 176

   21 FormalParams2: COMMA Type ID • FormalParams2

    COMMA  shift, and go to state 134

    $default  reduce using rule 22 (FormalParams2)

    FormalParams2  go to state 180


State 177

   50 MethodInvocation2: COMMA Expr MethodInvocation2 •

    $default  reduce using rule 50 (MethodInvocation2)


State 178

   31 Statement: IF LPAR Expr RPAR StatementOrError ELSE • StatementOrError

    error      shift, and go to state 78
    ID         shift, and go to state 34
    IF         shift, and go to state 35
    WHILE      shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    LBRACE     shift, and go to state 40
    SEMICOLON  shift, and go to state 41

    Statement         go to state 79
    StatementOrError  go to state 181
    MethodInvocation  go to state 46
    Assignment        go to state 47
    ParseArgs         go to state 48


State 179

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 182


State 180

   21 FormalParams2: COMMA Type ID FormalParams2 •

    $default  reduce using rule 21 (FormalParams2)


State 181

   31 Statement: IF LPAR Expr RPAR StatementOrError ELSE StatementOrError •

    $default  reduce using rule 31 (Statement)


State 182

   53 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR •

    $default  reduce using rule 53 (ParseArgs)
